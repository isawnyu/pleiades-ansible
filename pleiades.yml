---
- hosts: all
  become: true
  become_user: root
  become_method: sudo

  pre_tasks:
    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=3600

    - name: Install repo management
      apt: pkg=python-software-properties

    - name: Update packages
      apt: upgrade=safe update_cache=yes

    - name: Install pythons
      apt: pkg="{{ item }}"
      with_items:
        - python-dev

    - name: Install default python tools
      apt: pkg="{{ item }}" force=yes state=latest
      with_items:
        - python-pip
        - python-setuptools
        - python-virtualenv
        - supervisor

    - name: Create 2.7 virtualenv
      pip: name="Pillow" version="1.7.5" virtualenv="/srv/python27-apps" virtualenv_site_packages=no

    - name: Install required packages
      apt: pkg="{{ item }}" state=present
      with_items:
        - build-essential
        - libz-dev
        - libssl-dev
        - libjpeg-dev
        - libxslt1-dev
        - libxml2-dev
        - poppler-utils
        - lynx-cur
        - unzip
        - git
        - wv
        - iotop
        - sysstat
        - joe
        - zip

    - name: Install pleiades dependencies
      apt: pkg={{ item }}
      with_items:
        - libgeos-dev
        - libspatialindex-dev
        - openldap-utils
        - ldap-server
        - libsasl2-dev
        - libldap-dev
        - libffi-dev
        - autoconf
        - patch

    - name: Ensure plone_group
      group: name=plone_group

    - name: Ensure plone_daemon
      user:
        name=plone_daemon
        group=plone_group
        shell=/bin/bash
        createhome=yes
        generate_ssh_key=yes

    - name: Ensure plone_buildout
      user:
        name=plone_buildout
        group=plone_group

    - set_fact:
        instance_task:
          name: pleiades-instance{{ item }}
          command: /srv/python27-apps/pleiades4/bin/instance{{ item }} console
          directory: /srv/python27-apps/pleiades4
          user: plone_daemon
          redirect_stderr: true
          stopwaitsecs: 30
          autostart: true
          autorestart: true
      with_sequence: start=1 end={{ plone_client_count }}
      register: instance_task_results

    - set_fact:
        supervisor_tasks: "{{instance_task_results.results | map(attribute='ansible_facts.instance_task') | list + supervisor_tasks}}"

    - set_fact:
        balancer_client:
          name: plone_{{ item }}
          port: 840{{ item }}
      with_sequence: start=2 end={{ plone_client_count }}
      register: balancer_client_results

    - set_fact:
        balancer_clients: "{{balancer_client_results.results | map(attribute='ansible_facts.balancer_client') | list}}"

  roles:

    - jnv.unattended-upgrades

    - geerlingguy.postfix

    - {role: 'buildout',
        base_dir: '/srv/python27-apps',
        buildout_python: '/srv/python27-apps/bin/python2.7',
        instance_name: 'vaytrou',
        buildout_repo: 'https://github.com/isawnyu/vaytrou.git',
        buildout_version: 'jazkarta-fixes',
        tags: ['vaytrou', 'buildout'],
      }

    - {role: 'buildout',
        base_dir: '/srv/python27-apps',
        instance_name: 'pleiades4',
        buildout_repo: 'https://github.com/isawnyu/pleiades3-buildout.git',
        buildout_version: 'jazkarta-plone4',
        buildout_file: 'production.cfg',
        tags: ['plone4', 'buildout'],
      }

    - role: 'Stouts.supervisor'
      supervisor_superlance: yes
          
      tags: ['supervisor']

    - role: haproxy
      listen_name: plone
      listen_port: "{{ haproxy_port }}"
      clients: "{{ balancer_clients }}"
      tags: ['haproxy']

    - role: varnish

    - role: geerlingguy.apache
      apache_remove_default_vhost: true
      apache_mods_enabled:
        - alias.load
        - alias.conf
        - auth_basic.load
        - authn_file.load
        - authz_core.load
        - authz_groupfile.load
        - authz_host.load
        - authz_user.load
        - autoindex.load
        - autoindex.conf
        - cgid.load
        - deflate.load
        - deflate.conf
        - dir.load
        - dir.conf
        - env.load
        - expires.load
        - headers.load
        - mime.load
        - mime.conf
        - negotiation.load
        - negotiation.conf
        - proxy.load
        - proxy.conf
        - proxy_connect.load
        - proxy_http.load
        - rewrite.load
        - setenvif.load
        - setenvif.conf
        - status.load
        - status.conf
      apache_packages:
        - apache2
        - apache2-utils
        - apache2-dev
        - libapache2-mod-wsgi
        - libapache2-svn
      apache_state: stopped
      apache_ignore_missing_ssl_certificate: true

  tasks:

    - name: Newrelic Python config
      template: src=templates/newrelic.ini.j2 dest=/srv/python27-apps/pleiades4/newrelic.ini owner=plone_daemon group=plone_group mode=0644
      when: newrelic_license_key is defined
      notify: Restart pleiades

    - name: Apache pleiades config
      template: src=templates/pleiades.stoa.org.j2 dest=/etc/apache2/sites-available/pleiades.stoa.org.conf owner=root group=root mode=0644
      notify: restart apache

    - name: Apache pleiades-api config
      template: src=templates/api.pleiades.stoa.org.j2 dest=/etc/apache2/sites-available/api.pleiades.stoa.org.conf owner=root group=root mode=0644
      notify: restart apache

    - name: Apache atlantides config
      template: src=templates/atlantides.org.j2 dest=/etc/apache2/sites-available/atlantides.org.conf owner=root group=root mode=0644
      notify: restart apache

    - name: Apache pleiades symlink
      file: src=/etc/apache2/sites-available/pleiades.stoa.org.conf dest=/etc/apache2/sites-enabled/00-pleiades.stoa.org.conf state=link
      notify: restart apache

    - name: Apache pleiades-api symlink
      file: src=/etc/apache2/sites-available/api.pleiades.stoa.org.conf dest=/etc/apache2/sites-enabled/02-api.pleiades.stoa.org.conf state=link
      notify: restart apache

    - name: Apache atlantides symlink
      file: src=/etc/apache2/sites-available/atlantides.org.conf dest=/etc/apache2/sites-enabled/01-atlantides.org.conf state=link
      notify: restart apache

    - name: Remove default vhost symlink
      file: path=/etc/apache2/sites-enabled/vhosts.conf state=absent
      notify: restart apache

    - name: Create pleiades vhost dir
      file: path=/var/www/pleiades.stoa.org recurse=yes state=directory owner=www-data mode=0775

    - name: Create pleiades vhost dir
      file: path=/var/www/atlantides.org/downloads/pleiades recurse=yes state=directory owner=www-data mode=0775

    - name: Create atlantides dump dir
      file: path=/var/www/atlantides.org/downloads/pleiades/dumps/ state=directory owner=plone_daemon mode=0775

    - name: Create atlantides kml dir
      file: path=/var/www/atlantides.org/downloads/pleiades/kml/ state=directory owner=plone_daemon mode=0775

    - name: Create atlantides rdf dir
      file: path=/var/www/atlantides.org/downloads/pleiades/rdf/ state=directory owner=plone_daemon mode=0775

    - name: Create concordia vhost dir
      file: path=/var/www/concordia.atlantides.org/ recurse=yes state=directory owner=www-data mode=0775

    - name: Pleiades frontpage git checkout
      git:
        repo=https://github.com/isawnyu/pleiades-frontpage.git
        update=yes
        dest=/var/www/pleiades.stoa.org/pleiades-frontpage
        version=master
        depth=1
        force=yes
        accept_hostkey=yes
      sudo_user: "www-data"

    - name: Pleiades api git checkout
      git:
        repo=https://github.com/isawnyu/pleiades-api.git
        update=yes
        dest=/var/www/pleiades.stoa.org/pleiades-api
        version=master
        depth=1
        force=yes
        accept_hostkey=yes
      sudo_user: "www-data"

    - name: Create vaytrou log dir
      file: path=/srv/python27-apps/vaytrou/vtdata/pleiades3-three/log recurse=yes state=directory owner=plone_daemon

    - name: Set timezone
      file: src=/usr/share/zoneinfo/America/New_York dest=/etc/localtime state=link owner=root force=yes

    - name: Start supervisor
      service: name=supervisor state=started

    - name: Start apache
      service: name=apache2 state=started

  post_tasks:
    - name: Restart pleiades
      command: supervisorctl restart pleiades-instance{{ item }}
      when: (buildout_pleiades4 is defined and buildout_pleiades4.changed)
      with_sequence: start=1 end={{plone_client_count}}

    - name: Restart vaytrou
      command: supervisorctl restart vtpleiades3
      when: (buildout_vaytrou is defined and buildout_vaytrou.changed)

    - name: Cron dumps
      copy: src=files/pleiades-dumps dest=/etc/cron.daily/pleiades-dumps owner=root group=root mode=0755

    - name: Cron kml
      copy: src=files/pleiades-kmz dest=/etc/cron.daily/pleiades-kmz owner=root group=root mode=0755

    - name: Cron sitemap
      copy: src=files/pleiades-sitemap dest=/etc/cron.daily/pleiades-sitemap owner=root group=root mode=0755

    - name: Cron rdf
      copy: src=files/pleiades-rdf dest=/etc/cron.weekly/pleiades-rdf owner=root group=root mode=0755
